syntax = "proto3";

package TransactionManager;

import "LeaseManager/LeaseManager.proto";  // Import LeaseManager's proto file.

service TransactionManagerService {
  // Execute a transaction, including read and write operations.
  rpc ExecuteTransaction(TransactionRequest) returns (TransactionResponse);

  // Request leases for the required DadInts.
  rpc RequestLeases(LeaseRequest) returns (LeaseResponse);

  // Release leases, including conflicting ones.
  rpc ReleaseLeases(LeaseReleaseRequest) returns (LeaseReleaseResponse);
}

message TransactionRequest {
  repeated string read_dadints = 1;
  repeated DadInt write_dadints = 2;
}

message TransactionResponse {
  repeated DadInt read_values = 1;
  // Add any additional fields as needed.
}

message DadInt {
  string key = 1;
  int32 value = 2;
}

// Define Lease-related messages (from LeaseManager.proto).
import "LeaseManager/LeaseManager.proto";

// Define messages for lease request and response.
message LeaseRequest {
  repeated string requested_dadints = 1;
}

message LeaseResponse {
  repeated Lease lease = 1;
  // Add any additional fields as needed.
}

// Define messages for lease release request and response.
message LeaseReleaseRequest {
  repeated Lease lease_to_release = 1;
}

message LeaseReleaseResponse {
  // Add any response fields as needed.
}
